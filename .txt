#include <stdio.h>
int boo[9][9]={{0,0,0,8,0,1,0,0,0},
               {0,0,0,0,0,0,0,4,3},
               {5,0,0,0,0,0,0,0,0},
               {0,0,0,0,7,0,8,0,0},
               {0,0,0,0,0,0,1,0,0},
               {0,2,0,0,3,0,0,0,0},
               {6,0,0,0,0,0,0,7,5},
               {0,0,3,4,0,0,0,0,0},
               {0,0,0,2,0,0,6,0,0}};

void print()
{
    for(int i=0;i<9;i++)
    {
         if((i%3==0)&& i!=0)
            printf("_ _ _ _ _ _ _ _ _ _\n");
        for(int j=0;j<9;j++)
        {
            if((j%3==0)&& j!=0)
            printf("|");
            
            printf("%d ",boo[i][j]);
        }
        printf("\n");
    }
   printf("\n"); 
}
void pick(int *x, int *y)
{
    for(int i=0;i<9;i++)
    {
        for(int j=0;j<9;j++)
        {
            if(boo[i][j]==0)
            {
                *x=i;
                *y=j;
            }
        }
    }
}
int validate(int n, int x, int y)
{
    //row check
    for(int i=0;i<9;i++)
    {
        if((boo[x][i]==n))
        return 0;
    }
    //col check
    for(int i=0;i<9;i++)
    {
        if((boo[i][y]==n))
        return 0;
    }
    //sub grid check
    x=x/3;
    y=y/3;
    x=x*3;
    y=y*3;
    for(int i=x;i<(x+3);i++)
    for(int j=y;j<(y+3);j++)
    {
        if((boo[i][j]==n))
        return 0;
    }
    return 1;
}
int solve()
{
    int x,y=-1;
    pick(&x,&y);
    
    if(y==-1)
    return 1;
    
        for(int i=1;i<10;i++)
        {
            if(validate(i,x,y))
            {
                boo[x][y]=i;
                
                if(solve())
                return 1;
                
               boo[x][y]=0; 
            }
            
        }
    return 0;
}

int main()
{
    int i;
    print();
   i=solve();
    if(i!=1)
    printf("\ninvalid input\n");
    else{
        printf("solved sudoku \n\n");
    print();}

    return 0;
}
